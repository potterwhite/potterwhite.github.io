<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on</title><link>https://potterwhite.github.io/categories/devops/</link><description>Recent content in DevOps on</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 19 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://potterwhite.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>6.1 Ubuntu Ops</title><link>https://potterwhite.github.io/blog/006_devops/006_001_ubuntu/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://potterwhite.github.io/blog/006_devops/006_001_ubuntu/</guid><description/></item><item><title>6.2 Docker Ops</title><link>https://potterwhite.github.io/blog/006_devops/006_002_docker/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://potterwhite.github.io/blog/006_devops/006_002_docker/</guid><description/></item><item><title>DevOps Definition</title><link>https://potterwhite.github.io/blog/2024/07/19/devops-definition/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://potterwhite.github.io/blog/2024/07/19/devops-definition/</guid><description>&lt;h3 id="devops的定义">&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;opi=89978449&amp;amp;url=https://aws.amazon.com/devops/what-is-devops/&amp;amp;ved=2ahUKEwiOs9yZ-7GHAxUTsFYBHeRCBgcQFnoECBoQAw&amp;amp;usg=AOvVaw2hGSM1UgKYzZ4WqCEEg1ET" target="_blank" rel="noopener">DevOps的定义&lt;/a>&lt;/h3>
&lt;p>您所说的 &amp;ldquo;开发和操作环境达到一致&amp;rdquo; 是对DevOps的一个简单理解，但DevOps的概念要比这广泛和深入得多。最权威的定义之一来自DevOps研究和评估（DORA，DevOps Research and Assessment）和一些行业权威机构，如亚马逊AWS、谷歌云和微软Azure。&lt;/p>
&lt;p>&lt;strong>DevOps&lt;/strong> 是一种结合软件开发（Dev）和IT运营（Ops）的方法，其目标是通过自动化、持续集成和持续交付（CI/CD）等手段，加速软件开发和发布的速度，提高软件质量和稳定性。DevOps强调跨职能团队之间的协作和沟通，包括开发人员、质量保证人员、运营人员和其他相关人员。&lt;/p>
&lt;p>一个较为权威的定义来自于亚马逊AWS：&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;DevOps is the combination of cultural philosophies, practices, and tools that increases an organization’s ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes.&amp;rdquo;&lt;/p>&lt;/blockquote>
&lt;p>翻译成中文：&lt;/p>
&lt;blockquote>
&lt;p>“DevOps 是一种结合了文化理念、实践和工具的方法，能够提高组织以高速度交付应用程序和服务的能力：以比采用传统软件开发和基础设施管理流程的组织更快的速度演变和改进产品。”&lt;/p>&lt;/blockquote>
&lt;h3 id="grub的配置是否属于devops范围">GRUB的配置是否属于DevOps范围&lt;/h3>
&lt;p>严格来说，GRUB（GRand Unified Bootloader）的配置可以算作系统运维（Operations）的一部分，而运维是DevOps的一部分。因此，GRUB的配置是涵盖在DevOps范围内的。&lt;/p>
&lt;p>在具体的DevOps实践中，涉及系统配置和管理的任务，比如GRUB配置、系统引导加载程序配置、内核参数调整等，通常属于运维团队的职责。这些任务在DevOps环境下可能会通过基础设施即代码（Infrastructure as Code, IaC）工具来自动化，以确保环境的一致性和可重复性。例如，使用Ansible、Puppet或Chef等工具可以自动化配置GRUB等系统设置。&lt;/p>
&lt;p>总结：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DevOps的定义&lt;/strong>更广泛，包括文化、实践和工具的结合，旨在加快软件交付和提高质量。&lt;/li>
&lt;li>&lt;strong>GRUB的配置&lt;/strong>属于系统运维的一部分，因此可以算作DevOps范围的一部分，尤其是在自动化和基础设施管理的上下文中。&lt;/li>
&lt;/ul></description></item><item><title>Grub Setting</title><link>https://potterwhite.github.io/blog/2024/07/19/grub-setting/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://potterwhite.github.io/blog/2024/07/19/grub-setting/</guid><description>&lt;h2 id="001-grub-set-bakcground">&lt;strong>&lt;code>001. Grub set Bakcground&lt;/code>&lt;/strong>&lt;/h2>
&lt;div style="padding-left: 2em;">
&lt;h3 id="a-确认背景图片路径和格式">a. 确认背景图片路径和格式&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>检查图片路径和权限&lt;/strong>：
确保图片路径正确且具有正确的权限。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ls -l /boot/grub/xxx.JPG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出应类似于：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>-rw-r--r-- 1 root root 123456 Jul 16 12:34 /boot/grub/xxx.JPG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果权限不正确，可以运行以下命令进行修改：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo chmod &lt;span style="color:#0000cf;font-weight:bold">644&lt;/span> /boot/grub/xxx.JPG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown root:root /boot/grub/xxx.JPG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>legal format&lt;/strong>:
图片应该是 JPG、PNG 或 TGA 格式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>确认 GRUB 支持的分辨率&lt;/strong>：
在 GRUB 命令行界面（启动时按 &lt;code>c&lt;/code> 键进入）运行 &lt;code>vbeinfo&lt;/code> 命令以查看支持的分辨率。选择一个适合你屏幕的分辨率。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="b-更新-grub-配置文件">b. 更新 GRUB 配置文件&lt;/h3>
&lt;ol start="4">
&lt;li>
&lt;p>&lt;strong>编辑 GRUB 配置文件&lt;/strong>：
打开 &lt;code>/etc/default/grub&lt;/code> 文件进行编辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/default/grub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>确保以下配置行存在，并且取消注释（去掉行首的 &lt;code>#&lt;/code>）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">GRUB_BACKGROUND&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">/boot/grub/xxx.JPG&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">GRUB_TERMINAL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">gfxterm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">GRUB_GFXMODE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">1024x768 # 修改为你希望的分辨率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">GRUB_GFXPAYLOAD_LINUX&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">keep&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>更新 GRUB 配置&lt;/strong>：
保存并关闭文件后，运行以下命令以应用更改：&lt;/p></description></item><item><title>Docker使用</title><link>https://potterwhite.github.io/blog/2024/07/10/docker%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><guid>https://potterwhite.github.io/blog/2024/07/10/docker%E4%BD%BF%E7%94%A8/</guid><description>&lt;!-- ---
title: "Docker使用"
date: 2024-07-17
description: ""
categories:
 - blog
 - DevOps
 - Docker
noindex: true
--- --></description></item></channel></rss>